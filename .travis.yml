dist: xenial
language: node_js
node_js: 14
cache: npm
git:
    submodules: false
branches:
    only:
        - master
        - /^pluggable-widgets-tools-v*/
        - /^generator-widget-v*/
env:
    global:
        # Build only touched packages for pull requests when no shared files were touched
        - CHANGED_GLOBAL_FILES=$(git diff --name-only $TRAVIS_COMMIT_RANGE | grep -v "^packages")
        - PARTIAL_BUILD=$(if [ "$CHANGED_GLOBAL_FILES" = "" ] && [ "$TRAVIS_PULL_REQUEST" != "false" ]; then echo "true"; else echo "false"; fi)
        # Set arguments so lerna only runs scripts in changed packages
        - SINCE_ARG=$(if [ "$PARTIAL_BUILD" = "true" ]; then echo "--since $TRAVIS_BRANCH"; else echo ""; fi)
        # Android
        - COMPILE_API=29
        - ANDROID_BUILD_TOOLS=29.0.2
        - ANDROID_HOME=${HOME}/android-sdk
        - ANDROID_TOOLS_URL="https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip"
        # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!
        - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${ANDROID_HOME}/tools:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/platform-tools:${PATH}
stages:
    - name: test
      if: tag IS blank
    - name: deploy
      if: tag IS present
jobs:
    fast_finish: true
    include:
        #        - name: "Run unit tests"
        #          script:
        #              - set -e
        #              - npm run lint -- $SINCE_ARG
        #              - npm run test -- $SINCE_ARG
        #        - name: "Script tests (Node 10, windows)"
        #          node_js: 10
        #          os: windows
        #          script:
        #              - npm run test:scripts -- $SINCE_ARG
        #        - name: "Script tests (Node latest, windows)"
        #          os: windows
        #          script:
        #              - npm run test:scripts -- $SINCE_ARG
        #        - name: "Script tests (Node latest, linux)"
        #          script:
        #              - npm run test:scripts -- $SINCE_ARG
        #        - name: "Run automated end-to-end web tests"
        #          dist: bionic
        #          addons:
        #              firefox: latest
        #          git:
        #              submodules: true
        #          services:
        #              - docker
        #              - xvfb
        #          env:
        #              - BROWSER=firefox
        #              - DISPLAY=:99.0
        #          script:
        #              - set -e
        #              - npm run release -- --scope '*-web' $SINCE_ARG
        #              - npm run test:e2e -- --scope '*-web' $SINCE_ARG
        - name: "Run automated end-to-end native tests"
          dist: bionic
          git:
              submodules: true
          language: java
          jdk:
              - openjdk8
          before_install:
              # Set up JDK 8 for Android SDK - Java is universally needed: codacy, unit tests, emulators
              - ./packages/tools/pluggable-widgets-tools/scripts/install-android-tools.sh
              - echo y | sdkmanager --no_https "emulator" >/dev/null # duh
              - echo y | sdkmanager --no_https "system-images;android-${COMPILE_API};google_apis;x86_64" # install our emulator
          install:
              # Set up KVM on linux for hardware acceleration. Manually here so it only happens for emulator tests, takes ~30s
              - sudo -E apt-get -yq --no-install-suggests --no-install-recommends install bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder >/dev/null
              - sudo adduser $USER libvirt
              - sudo adduser $USER kvm
              - echo no | avdmanager create avd --force -n Pixel_2_API_29 -k "system-images;android-${COMPILE_API};google_apis;x86_64" -c 100M # create device
              - sudo -E sudo -u "$USER" -E bash -c "${ANDROID_HOME}/emulator/emulator -avd Pixel_2_API_29 -no-snapshot -no-window -camera-back none -camera-front none -selinux permissive -qemu -m 5120 &"
              - echo 'Emu created'
              - ./packages/tools/pluggable-widgets-tools/scripts/android-wait-for-emulator.sh
              - nvm install 14
              - npm ci
          script:
              - set -e
              - npm run release -- --scope 'badge-native' $SINCE_ARG
              - npm run test:e2e -- --scope 'badge-native' $SINCE_ARG
        - stage: deploy
          name: "Release npm package"
          script:
              - echo "Ready to deploy!"
          before_deploy:
              - if [[ "$TRAVIS_TAG" =~ ^pluggable-widgets-tools-v* ]]; then cd packages/tools/pluggable-widgets-tools; else cd packages/tools/generator-widget; fi
          deploy:
              skip_cleanup: true
              provider: npm
              email: $NPM_EMAIL
              api_key: $NPM_KEY
              on:
                  tags: true
notifications:
    slack:
        on_cancel: never
        on_error: always
        on_failure: always
        secure: DjpkK0j6qCssXhI8Ym/pPQ9L+vQU8RMjaIhYmkNHDgKQIPifQib1nIDpUSVFWmCq/A+0cihu514MVvrFKE5rpg99QmwXTBsR0+KGG6wJrBXrBpxjndL4T8vqVvnpaOWU1k8Ky1ECdbfsHmkEUzk97JoekifvFr9k7g4bQyEtZufh4Y3L5UD9DSM6Q+AbR9tp7E/mUNyncB71VStscHDSv5MAD2uHmfn9PtyO3PQW2Y/YquhdR3lWi7GcjuSjZYH4A3s5V9LejUNxTMt7klztpnWRP9zRvh3pBPnol1L8mIJO5bAHoxSVg/djFLxXb7RmhwsuzJApZGXiYK6I3zRUlf2cEN6sjuW/vvXPo6nferd6/lCl10GljuqAm4Fw7yGdbh7L6wlZtUrCzkNs3VJYScqkRv0sXs1+8xx35Ge3uJGr7DOLIsg/TgSOOBpegc3XARILHBra07iDqGGSdm5x3xM0aVpqEJhMYPOOBmT6pJ1GO5AQOKyYooNT+mpY5ZjSjr3rXmzlPDHNqd12Bn6SXFa2VWZ8fVcCh43tDHVDvsUXpPJPukbfRV+0oSzQKQ1+yjvAbZJpuvOnf/AI5ZK88HcrRPCi3h2Q4ryaIXRlDdDqRrHGphTAJxvYrAuJEEU3oCv1VAAAxd82zZfnzy8ERc7Ck6kd8HL71TCBc3T19TY=
